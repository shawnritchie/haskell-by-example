
==================== FINAL INTERFACE ====================
2017-02-26 09:37:04.7167 UTC

interface main@main:Main 8002
  interface hash: 5a9629c1f12b747951ee7e1bce7f1c44
  ABI hash: 5f9675832db036856008bc3c28422300
  export-list hash: e0265feaa40df8116af1c336710413c2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 5b0fb8b4171066632b82e7cc5a97fde7
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.interactWith
  Main.main
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      haskell-by-example-0.1.0.0@haskell-by-example-0.1.0.0-AvWof41KC5XGTmmdiwDUVM
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  haskell-by-example-0.1.0.0@haskell-by-example-0.1.0.0-AvWof41KC5XGTmmdiwDUVM:CH04.SplitLines 299c03cc656388c862287740437bacd9
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
97e95298cadf3087fed9f34a7aabce5a
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main4
                   GHC.Types.True
                   w) -}
8b71051fc18698e0dfe3efe9a5017ecb
  interactWith ::
    (GHC.Base.String -> GHC.Base.String)
    -> GHC.IO.FilePath -> GHC.IO.FilePath -> GHC.Types.IO ()
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.interactWith1
                  `cast`
                (<GHC.Base.String -> GHC.Base.String>_R
                 ->_R <GHC.IO.FilePath>_R
                 ->_R <GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6e17bbc8bc7d0abc0ece4c4a1d4e3647
  interactWith1 ::
    (GHC.Base.String -> GHC.Base.String)
    -> GHC.IO.FilePath
    -> GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*C1(U)><L,U><L,U><S,U>,
     Unfolding: (\ (function :: GHC.Base.String -> GHC.Base.String)
                   (inputFile :: GHC.IO.FilePath)
                   (outputFile :: GHC.IO.FilePath)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        inputFile
                        GHC.IO.IOMode.ReadMode
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 System.IO.writeFile1 outputFile (function ipv3) ipv2 } }) -}
93f37ad4d303a334497ec11974615cea
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
e0715016409f5fcb22bcc7ea70bad9f3
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case System.Environment.getArgs1 s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   [] -> Main.$wfail ipv
                   : input ds
                   -> case ds of wild1 {
                        [] -> Main.$wfail ipv
                        : output ds2
                        -> case ds2 of wild2 {
                             []
                             -> case GHC.IO.Handle.FD.openFile1
                                       input
                                       GHC.IO.IOMode.ReadMode
                                       ipv of ds3 { (#,#) ipv2 ipv3 ->
                                case GHC.IO.Handle.Text.hGetContents1
                                       ipv3
                                       ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                                System.IO.writeFile1
                                  output
                                  (Data.OldList.unlines
                                     (GHC.Base.map
                                        @ [GHC.Types.Char]
                                        @ [GHC.Types.Char]
                                        Main.main2
                                        (CH04.SplitLines.splitLines ipv5)))
                                  ipv4 } }
                             : ipv2 ipv3 -> Main.$wfail ipv } } } }) -}
3b1788e5b2df475a3c2d2c067bf29235
  main2 :: GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 1,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 Data.OldList.wordsFB
                   @ [GHC.Types.Char]
                   Main.main3
                   (GHC.List.badHead @ [GHC.Types.Char])
                   x) -}
ace73f37c56a232818ef1f27f585267c
  main3 :: [GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (x :: [GHC.Types.Char])
                   (ds :: [GHC.Types.Char])[OneShot] ->
                 x) -}
d6e98c82835caecaecd5e13e444ea295
  main4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "error: exactly two arguments needed"#) -}
7fbe72be8b84f0310d6825fec8b4f8eb
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

